# shotgrid_api.py

import os
import shotgun_api3

# -------------------------------------
# ShotGrid 연결 설정
# 환경변수 또는 설정파일로 관리 가능
# -------------------------------------
SG_URL = os.getenv("SG_URL", "https://ww5th.shotgrid.autodesk.com/projects/")
SG_SCRIPT_NAME = os.getenv("SG_SCRIPT_NAME", "shotgrid_io_manager")
SG_API_KEY = os.getenv("SG_API_KEY", "your_api_key_here")
SG_PROJECT_NAME = os.getenv("SG_PROJECT_NAME", "Westworld")

sg = shotgun_api3.Shotgun(
    base_url=SG_URL,
    script_name=SG_SCRIPT_NAME,
    api_key=SG_API_KEY
)


def upload_to_shotgrid(shot_info: dict, media_paths: dict):
    """
    ShotGrid에 Sequence, Shot, Version을 생성하고 미디어를 업로드합니다.

    Parameters:
        shot_info (dict): {
            "seq_name": "S001",
            "shot_name": "S001_A0030",
            "version": "v001",
            ...
        }
        media_paths (dict): {
            "mp4": ".../mp4/file.mp4",
            "webm": ".../webm/file.webm",
            "thumbnail": ".../thumbnail/thumb.jpg"
        }
    """

    # 프로젝트 찾기
    project = sg.find_one("Project", [["name", "is", SG_PROJECT_NAME]])
    if not project:
        raise RuntimeError(f"[ShotGrid] 프로젝트를 찾을 수 없습니다: {SG_PROJECT_NAME}")

    # 시퀀스 찾기 or 생성
    seq_name = shot_info["seq_name"]
    sequence = sg.find_one("Sequence", [
        ["code", "is", seq_name],
        ["project", "is", project]
    ])
    if not sequence:
        sequence = sg.create("Sequence", {
            "project": project,
            "code": seq_name
        })
        print(f"[ShotGrid] 시퀀스 생성: {seq_name}")

    # 샷 찾기 or 생성
    shot_name = shot_info["shot_name"]
    shot = sg.find_one("Shot", [
        ["code", "is", shot_name],
        ["project", "is", project]
    ])
    if not shot:
        shot = sg.create("Shot", {
            "project": project,
            "code": shot_name,
            "sg_sequence": sequence
        })
        print(f"[ShotGrid] 샷 생성: {shot_name}")

    # Version 생성
    version_code = f"{shot_name}_{shot_info['version']}"
    version_data = {
        "project": project,
        "code": version_code,
        "entity": shot,
        "description": f"Auto-generated by ScanData Converter",
        "sg_path_to_movie": media_paths.get("mp4")
    }

    # 썸네일이 있을 경우
    thumbnail_path = media_paths.get("thumbnail")
    if thumbnail_path and os.path.exists(thumbnail_path):
        version_data["image"] = thumbnail_path

    version = sg.create("Version", version_data)
    print(f"[ShotGrid] Version 등록 완료: {version_code}")

    return version
